"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6978],{9332:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>h});var i=r(5893),t=r(1151);const o={slug:"/"},s="Introduction",a={id:"introduction",title:"Introduction",description:"Welcome to the [RISC Zero] documentation! This site contains documentation for:",source:"@site/api_versioned_docs/version-0.20/introduction.md",sourceDirName:".",slug:"/",permalink:"/website-preview/risc0/risc0/pr/1395/api/",draft:!1,unlisted:!1,editUrl:"https://github.com/risc0/risc0/edit/main/website/api/introduction.md",tags:[],version:"0.20",frontMatter:{slug:"/"},sidebar:"api",next:{title:"Bonsai Overview",permalink:"/website-preview/risc0/risc0/pr/1395/api/bonsai/"}},c={},h=[{value:"What is RISC Zero?",id:"what-is-risc-zero",level:2},{value:"Bonsai",id:"bonsai",level:2},{value:"The RISC Zero zkVM",id:"the-risc-zero-zkvm",level:2},{value:"Connect with us",id:"connect-with-us",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["Welcome to the ",(0,i.jsx)(n.a,{href:"https://risczero.com",children:"RISC Zero"})," documentation! This site contains documentation for:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/website-preview/risc0/risc0/pr/1395/api/bonsai/",children:"Bonsai"})}),": A software development stack that allows on-chain and off-chain\napplications to request and receive proofs from our zkVM."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/website-preview/risc0/risc0/pr/1395/api/zkvm/",children:"The RISC Zero zkVM"})}),": A high-performance tool for proving correct\nexecution of arbitrary code."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/proof-system",children:"The RISC Zero Proof System"})}),": The cryptographic techniques\nunderlying the zkVM."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["We also have reference documentation for our Rust code, which can be found at\n",(0,i.jsx)(n.a,{href:"https://docs.rs/risc0-zkvm",children:"https://docs.rs/risc0-zkvm/"})," for the ",(0,i.jsx)(n.code,{children:"risc0-zkvm"})," crate. For our\nother Rust crates, links to their reference docs can be found in ",(0,i.jsx)(n.a,{href:"https://github.com/risc0/risc0#rust-libraries",children:"this\nlist"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"what-is-risc-zero",children:"What is RISC Zero?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://risczero.com",children:"RISC Zero"})," is a ",(0,i.jsx)(n.a,{href:"https://risczero.com/news/series-a",children:"startup"})," creating the infrastructure & tooling necessary for\ndevelopers around the globe to build software that leverages ZK technology."]}),"\n",(0,i.jsxs)(n.p,{children:["ZK technology is staged to re-shape the way we interact digitally. Historically,\nthe only method for confirming the correct execution of a software application\nwas through redundant computation. ZK introduces a new option: ",(0,i.jsx)(n.strong,{children:"verifiable\ncomputation"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["It's now possible to pair a program's output with a self-certifying ",(0,i.jsx)(n.em,{children:"receipt"}),",\nallowing a skeptical third party to verify correct execution \u2014 and the verifier\ndoesn't need to repeat the original computation or even see the inputs to the\nprogram!"]}),"\n",(0,i.jsx)(n.p,{children:"Verifiable computation is a game changer for the resilience and economics of\noperating the computing infrastructure we all rely on. It creates a number of\nemergent use cases which we are excited to enable. Key among these use cases\nare:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://twitter.com/RiscZero/status/1677316664772132864",children:"zk coprocessors"}),", which enable on-chain applications to reduce gas costs by\nmoving the complex part of their application logic off-chain"]}),"\n",(0,i.jsxs)(n.li,{children:["blockchain infrastructure, including ",(0,i.jsx)(n.a,{href:"https://www.theblock.co/post/240929/optimism-zk-proof-proposals?utm_source=twitter&utm_medium=social",children:"our work with Optimism"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To enable ZK builders to thrive, we're working on two core products: the ",(0,i.jsx)(n.a,{href:"/website-preview/risc0/risc0/pr/1395/api/zkvm/",children:"zkVM"}),"\nand ",(0,i.jsx)(n.a,{href:"/website-preview/risc0/risc0/pr/1395/api/bonsai/",children:"Bonsai"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"bonsai",children:"Bonsai"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/website-preview/risc0/risc0/pr/1395/api/bonsai/",children:"Bonsai"})," is a proving service that allows on-chain and off-chain applications to\nrequest and receive ",(0,i.jsx)(n.a,{href:"/website-preview/risc0/risc0/pr/1395/api/zkvm/",children:"zkVM"})," proofs."]}),"\n",(0,i.jsx)(n.p,{children:"Bonsai is a general purpose zero-knowledge proving service that allows for any\nchain, any protocol, and any application to take advantage of ZK proofs. It is\nmassively parallel, programmable, and performant."}),"\n",(0,i.jsx)(n.p,{children:"Bonsai lets you integrate zero-knowledge proofs directly into any smart\ncontracts without the need for custom circuits. This allows for ZK to be\nintegrated directly into dApps on any EVM chain, with the potential to support\nany other ecosystem."}),"\n",(0,i.jsx)(n.p,{children:"Our zkVM is the foundation of Bonsai and enables widespread language\ncompatibility with support for provable Rust code and the potential for\nzero-knowledge provable code in any language that compiles to RISC-V like C++,\nRust, Go, and more. With a combination of recursive proofs, a bespoke circuit\ncompiler, state continuations, and continuous improvements to the proving\nalgorithm, Bonsai enables anyone to generate highly performant ZK proofs for a\nvariety of applications."}),"\n",(0,i.jsxs)(n.p,{children:["Read more on Bonsai ",(0,i.jsx)(n.a,{href:"/website-preview/risc0/risc0/pr/1395/api/bonsai/",children:"here"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"the-risc-zero-zkvm",children:"The RISC Zero zkVM"}),"\n",(0,i.jsxs)(n.p,{children:["The RISC Zero ",(0,i.jsx)(n.a,{href:"/website-preview/risc0/risc0/pr/1395/api/zkvm/",children:"zkVM"})," can prove the correct execution of arbitrary code, allowing\ndevelopers to build ZK applications in mature languages like Rust and C++. This\nrelease marked a major breakthrough in enabling ZK software development: the\nzkVM made it possible to build a ZK application ",(0,i.jsx)(n.em,{children:"without having to build a\ncircuit"})," and ",(0,i.jsx)(n.em,{children:"without writing in a custom language"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"By allowing developers to build in Rust and leverage the maturity of the Rust\necosystem, the zkVM has made it possible for developers to quickly build\nmeaningful ZK applications, with no background in advanced mathematics or\ncryptography."}),"\n",(0,i.jsx)(n.p,{children:"These applications include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://github.com/risc0/risc0/tree/main/examples/json",children:"JSON"})}),": prove the contents of some entry in a JSON file, while keeping the\nrest of the data private"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://risczero.com/news/waldo",children:"Where's Waldo"})}),": prove that Waldo appears in a JPG file, while\nkeeping the rest of the image private"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://github.com/risc0/risc0/tree/main/examples/chess",children:"ZK Checkmate"})}),": prove that you see a mate-in-one, without revealing\nthe winning move"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://risczero.com/news/zkpoex",children:"ZK Proof of Exploit"})}),": prove that you ",(0,i.jsx)(n.em,{children:"could"})," exploit an Ethereum\naccount, without revealing the exploit"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://github.com/risc0/risc0/tree/main/examples/ecdsa",children:"ECDSA signature verification"})}),": prove the validity of an ECDSA\nsignature"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["These examples are all made possible by ",(0,i.jsx)(n.strong,{children:"leveraging a mature software\necosystem"}),": over 70% of the ",(0,i.jsx)(n.a,{href:"https://risc0.github.io/ghpages/dev/crate-validation/index.html",children:"top 1000 Rust crates"})," work\nout-of-the-box in the zkVM. Being able to import Rust crates is a game changer\nfor the ZK software world: projects that would take months or years to build on\nother platforms can be solved trivially on our platform."]}),"\n",(0,i.jsxs)(n.p,{children:["In addition to being far easier to build on, we're also delivering on\n",(0,i.jsx)(n.a,{href:"/website-preview/risc0/risc0/pr/1395/api/zkvm/benchmarks",children:"performance"}),". The zkVM has GPU acceleration for CUDA and Metal, and with\n",(0,i.jsx)(n.a,{href:"https://risczero.com/news/continuations",children:"continuations"})," we've enabled parallel proving of large programs."]}),"\n",(0,i.jsx)(n.p,{children:"Given the ease of development and the performance, the zkVM is the clear choice\nfor your ZK needs."}),"\n",(0,i.jsx)(n.h2,{id:"connect-with-us",children:"Connect with us"}),"\n",(0,i.jsxs)(n.p,{children:["If you want to report a bug or contribute to our code, you can do so on\n",(0,i.jsx)(n.a,{href:"https://github.com/risc0/risc0",children:"GitHub"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["You're welcome to join ",(0,i.jsx)(n.a,{href:"https://discord.gg/risczero",children:"our Discord community"})," to discuss RISC Zero,\nask questions, and see how other people use RISC Zero!"]}),"\n",(0,i.jsxs)(n.p,{children:["Follow us on ",(0,i.jsx)(n.a,{href:"https://twitter.com/risczero",children:"Twitter"})," and ",(0,i.jsx)(n.a,{href:"https://www.youtube.com/@risczero",children:"YouTube"}),", and ",(0,i.jsx)(n.a,{href:"https://fmree464va4.typeform.com/to/X3KJB85v",children:"sign up for our mailing\nlist"})," to get our latest announcements."]})]})}function d(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>s});var i=r(7294);const t={},o=i.createContext(t);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);